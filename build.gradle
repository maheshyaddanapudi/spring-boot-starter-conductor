plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'tech.yanand.maven-central-publish' version '1.2.0'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.maheshyaddanapudi'
version = '3.21.11.2'
archivesBaseName = 'spring-boot-starter-conductor' // Set the desired artifact base name

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.release.set(17)
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:2.7.16"
    }
}

configurations.all {
    // Exclude conflicting logging frameworks
    exclude group: 'ch.qos.logback', module: 'logback-classic'
    exclude group: 'ch.qos.logback', module: 'logback-core'
    exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'

    resolutionStrategy {
        // Force specific versions for critical dependencies
        force 'org.codehaus.jettison:jettison:1.5.4'
        force 'org.apache.commons:commons-compress:1.21'
    }

    attributes {
        attribute(TargetJvmVersion.TARGET_JVM_VERSION_ATTRIBUTE, 17)
    }
}

dependencies {
    // Core Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.apache.logging.log4j:log4j-web'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:2.3.3'

    // Core Conductor dependencies
    implementation group: 'org.conductoross', name: 'conductor-core', version: '3.21.11'
    implementation group: 'org.conductoross', name: 'conductor-server', version: '3.21.11'
    implementation group: 'org.conductoross', name: 'conductor-rest', version: '3.21.11'

    // Queue configurations
    implementation(group: 'io.orkes.queues', name: 'orkes-conductor-queues', version: '1.0.0') {
        exclude group: 'com.netflix.conductor', module: 'conductor-core'
    }

    // Explicit external dependencies
    implementation 'redis.clients:jedis:4.3.1'
    implementation 'org.postgresql:postgresql:42.3.3'

    // Metrics dependencies
    implementation group: 'org.conductoross', name: 'conductor-metrics', version: '3.21.11'

    // Additional Conductor modules
    implementation group: 'org.conductoross', name: 'conductor-amqp', version: '3.21.11'
    implementation group: 'org.conductoross', name: 'conductor-kafka', version: '3.21.11'
    implementation group: 'org.conductoross', name: 'conductor-json-jq-task', version: '3.21.11'

    // Annotation Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

// Javadoc and Sources JAR tasks
task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(tasks.javadocJar)
            artifact(tasks.sourcesJar)
            pom {
                name = 'Spring Boot Starter for Conductor OSS'
                description = 'A Spring Boot starter for Conductor OSS with Queue Configuration'
                packaging = 'jar'
                url = 'https://github.com/maheshyaddanapudi/spring-boot-starter-conductor'
                scm {
                    connection = 'scm:git:git://github.com/maheshyaddanapudi/spring-boot-starter-conductor.git'
                    developerConnection = 'scm:git:ssh://github.com/maheshyaddanapudi/spring-boot-starter-conductor.git'
                    url = 'https://github.com/maheshyaddanapudi/spring-boot-starter-conductor'
                }
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'maheshyaddanapudi'
                        name = 'Mahesh Yaddanapudi'
                        email = 'opensource@maheshyaddanapudi.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "Local"
            url = layout.buildDirectory.dir('repos/bundles')
        }
    }
}

afterEvaluate {
    signing {
        useGpgCmd()
        sign publishing.publications.mavenJava
    }
}

mavenCentral {
    repoDir = layout.buildDirectory.dir('repos/bundles')
    authToken = findProperty('ossrhToken') ?: System.getenv('OSSRH_HTOKEN')
    publishingType = 'AUTOMATIC'
    maxWait = 60
}
