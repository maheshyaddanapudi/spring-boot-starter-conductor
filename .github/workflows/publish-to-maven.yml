name: Publish to Maven Central

on:
  push:
    branches:
      - main  # Update this to your main branch if needed

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Generate the base64-encoded token
      - name: Generate base64-encoded token
        run: |
          echo "::add-mask::${{ secrets.OSSRH_TOKEN_USERNAME }}"
          echo "::add-mask::${{ secrets.OSSRH_TOKEN_PASSWORD }}"
          ENCODED_TOKEN=$(printf "%s:%s" "${{ secrets.OSSRH_TOKEN_USERNAME }}" "${{ secrets.OSSRH_TOKEN_PASSWORD }}" | base64)
          echo "OSSRH_TOKEN=$ENCODED_TOKEN" >> $GITHUB_ENV
        shell: bash

      # Generate a new GPG key pair
      - name: Generate GPG key
        run: |
          echo -e "Key-Type: default\nKey-Length: 2048\nSubkey-Type: default\nName-Real: GitHub Actions\nName-Email: actions@github.com\nExpire-Date: 0\nPassphrase: ${GPG_PASSPHRASE}\n%commit\n%echo done" > gen-key-script
          gpg --batch --pinentry-mode loopback --passphrase "${GPG_PASSPHRASE}" --generate-key gen-key-script
          rm gen-key-script
          gpg --list-secret-keys --keyid-format LONG
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        shell: bash

      # Export the GPG key ID
      - name: Extract GPG key ID
        id: gpg
        run: |
          KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep '^sec' | head -n1 | awk '{print $2}' | cut -d'/' -f2)
          echo "KEY_ID=$KEY_ID" >> $GITHUB_ENV
        shell: bash

      # Export GPG private key
      - name: Export GPG private key
        run: |
          gpg --batch --pinentry-mode loopback --passphrase "${GPG_PASSPHRASE}" --armor --export-secret-keys $KEY_ID > private.key
        env:
          KEY_ID: ${{ env.KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        shell: bash

      # Read GPG private key content
      - name: Read GPG private key content
        id: gpg_private_key
        run: |
          GPG_PRIVATE_KEY_CONTENT=$(cat private.key)
          echo "GPG_PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          echo "$GPG_PRIVATE_KEY_CONTENT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      # Set up JDK 17 and pass GPG key (moved below GPG key generation)
      - name: Set up JDK 17 and GPG key
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
          gpg-private-key: ${{ env.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}

      # Grant execute permission for Gradle wrapper
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      # Build and publish to Maven Central
      - name: Build and publish
        run: ./gradlew clean build publish --no-daemon --stacktrace
        env:
          OSSRH_TOKEN: ${{ env.OSSRH_TOKEN }}

      # Clean up GPG keys
      - name: Clean up GPG keys
        run: |
          gpg --batch --yes --delete-secret-keys $KEY_ID
          gpg --batch --yes --delete-keys $KEY_ID
          rm -f private.key
        env:
          KEY_ID: ${{ env.KEY_ID }}
        shell: bash
