name: Publish to Maven Central

on:
  push:
    branches:
      - release # or 'main' depending on your branch control

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 17 for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'adopt'

      # Generate GPG keys dynamically
      - name: Generate GPG keys
        run: |
          echo -e "Key-Type: default\n\
          Subkey-Type: default\n\
          Name-Real: GitHub Actions\n\
          Name-Email: actions@github.com\n\
          Expire-Date: 1d\n\
          Passphrase: ${GPG_PASSPHRASE}\n\
          %commit\n" | gpg --batch --gen-key
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # Export the generated GPG private key
      - name: Export GPG private key
        run: |
          gpg --armor --export-secret-keys > private.key

      # Set up the Gradle wrapper and give it permission to run
      - name: Setup Gradle Wrapper
        run: chmod +x ./gradlew

      # Configure Gradle properties dynamically for publishing to Sonatype
      - name: Set up gradle.properties
        run: |
          echo "signing.keyId=$(gpg --list-keys --with-colons | grep pub | cut -d':' -f5)" >> gradle.properties
          echo "signing.password=${GPG_PASSPHRASE}" >> gradle.properties
          echo "signing.secretKeyRingFile=$(pwd)/private.key" >> gradle.properties
          echo "ossrhUsername=${{ secrets.OSSRH_USERNAME }}" >> gradle.properties
          echo "ossrhPassword=${{ secrets.OSSRH_PASSWORD }}" >> gradle.properties
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      # Build, sign, and publish to Maven Central
      - name: Build and publish
        run: ./gradlew clean build publish
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      # Clean up GPG keys
      - name: Clean up GPG keys
        run: |
          rm private.key
          gpg --batch --yes --delete-secret-keys actions@github.com
          gpg --batch --yes --delete-keys actions@github.com
