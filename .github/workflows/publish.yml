name: Publish to Maven Central

on:
  push:
    branches:
      - release # or 'main' depending on how you want to control it

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up JDK 17 for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'
          distribution: 'adopt'

      # Generate GPG keys dynamically
      - name: Generate GPG keys
        run: |
          gpg --batch --gen-key <<EOF
          Key-Type: default
          Subkey-Type: default
          Name-Real: GitHub Actions
          Name-Email: actions@github.com
          Expire-Date: 1d
          Passphrase: ${GPG_PASSPHRASE}
          %commit
          EOF
          gpg --list-keys
        id: generate_gpg_keys

      # Export the generated GPG keys to be used for signing
      - name: Export GPG private key
        run: |
          gpg --armor --export-secret-keys > private.key
        id: export_gpg_key

      # Set up the Gradle wrapper and give it permission to run
      - name: Setup Gradle Wrapper
        run: chmod +x ./gradlew

      # Configure Gradle properties dynamically for publishing to Sonatype
      - name: Set up gradle.properties
        run: |
          echo "signing.keyId=$(gpg --list-keys --with-colons | grep pub | cut -d':' -f5)" >> gradle.properties
          echo "signing.password=${{ secrets.GPG_PASSPHRASE }}" >> gradle.properties
          echo "signing.secretKeyRingFile=$(pwd)/private.key" >> gradle.properties
          echo "ossrhUsername=${{ secrets.OSSRH_USERNAME }}" >> gradle.properties
          echo "ossrhPassword=${{ secrets.OSSRH_PASSWORD }}" >> gradle.properties

      # Build, sign, and publish to Maven Central
      - name: Build and publish
        run: ./gradlew clean build publish
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}

      # Clean up GPG keys
      - name: Clean up GPG keys
        run: |
          rm private.key
          gpg --batch --yes --delete-secret-keys actions@github.com
          gpg --batch --yes --delete-keys actions@github.com
